name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  UBUNTU_VERSION: ubuntu-22.04
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java 17 SDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          gradle-version: '8.5'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with gradle
        run: ./gradlew build --stacktrace

      - name: Run tests
        run: ./gradlew test

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}/ngonichibamu/onlinestore:v1.0.0
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}
          platforms: linux/amd64, linux/arm64
  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install docker compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
          docker compose version
      - name: Run docker compose
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          docker compose up -d --build
          docker ps